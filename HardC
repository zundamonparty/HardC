<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HardC Translator</title>
    <style>
        body {
            font-family: 'Fredoka', sans-serif;
            background-color: #f3f3f3;
            color: #333;
            text-align: center;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 2.5rem;
            color: #444;
        }

        textarea {
            width: 100%;
            height: 200px;
            font-family: 'Courier New', Courier, monospace;
            font-size: 1rem;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #ccc;
            resize: none;
            margin-bottom: 10px;
        }

        .buttons {
            margin-top: 20px;
        }

        .btn {
            background-color: #ff8c8c;
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.2rem;
            cursor: pointer;
            border-radius: 5px;
            margin: 10px;
        }

        .btn:hover {
            background-color: #ff6b6b;
        }

        #outputArea {
            display: none;
            background-color: #f9f9f9;
            padding: 20px;
            font-family: 'Courier New', Courier, monospace;
            font-size: 1rem;
            white-space: pre-wrap;
            border: 1px solid #ddd;
            border-radius: 8px;
            margin-top: 20px;
        }

        .footer {
            margin-top: 40px;
            color: #888;
        }

        .footer a {
            color: #ff8c8c;
            text-decoration: none;
        }

    </style>
</head>
<body>

    <div class="container">
        <h1>HardC Code Translator</h1>
        <p>Convert your code between C and HardC.</p>

        <textarea id="inputCode" placeholder="Input C code here"></textarea>

        <div class="buttons">
            <button class="btn" onclick="translateToHardC()">Translate C to HardC</button>
            <button class="btn" onclick="translateToC()">Translate HardC to C</button>
        </div>

        <div id="outputArea"></div>
    </div>

    <div class="footer">
        <p>Made by <a href="https://www.tiktok.com/@zundachiikawa" target="_blank"> @Zundachiikawa on TikTok </a></p>
    </div>

    <script>
        // Function to translate C code to HardC
        function translateToHardC() {
            let inputCode = document.getElementById('inputCode').value;
            let output = cToHardC(inputCode);
            document.getElementById('outputArea').style.display = 'block';
            document.getElementById('outputArea').textContent = output;
        }

        // Function to translate HardC code to C
        function translateToC() {
            let inputCode = document.getElementById('inputCode').value;
            let output = hardCToC(inputCode);
            document.getElementById('outputArea').style.display = 'block';
            document.getElementById('outputArea').textContent = output;
        }

        // Example C to HardC translation logic (simplified for demo)
        function cToHardC(inputCode) {
            // Replace simple C keywords with HardC equivalents (for demo purposes)
            let hardCCode = inputCode;

            // Translate int to CompleteIntegerWholeNumberType, etc.
            hardCCode = hardCCode.replace(/\bint\b/g, 'CompleteIntegerWholeNumberType');
            hardCCode = hardCCode.replace(/\bif\b/g, 'PerformConditionalEvaluation');
            hardCCode = hardCCode.replace(/\breturn\b/g, 'YieldReturnFromFunction');
            hardCCode = hardCCode.replace(/\bprintf\b/g, 'ConsolePrint');
            hardCCode = hardCCode.replace(/\belse\b/g, 'ElsePerformConditionalEvaluation');

            // Add more rules for other C keywords here if needed...

            return hardCCode;
        }

        // Example HardC to C translation logic (simplified for demo purposes)
        function hardCToC(inputCode) {
            // Replace HardC equivalents back to C
            let cCode = inputCode;

            cCode = cCode.replace(/\bCompleteIntegerWholeNumberType\b/g, 'int');
            cCode = cCode.replace(/\bPerformConditionalEvaluation\b/g, 'if');
            cCode = cCode.replace(/\bYieldReturnFromFunction\b/g, 'return');
            cCode = cCode.replace(/\bConsolePrint\b/g, 'printf');
            cCode = cCode.replace(/\bElsePerformConditionalEvaluation\b/g, 'else');

            // Add more rules for other HardC keywords here if needed...

            return cCode;
        }
    </script>

</body>
</html>
